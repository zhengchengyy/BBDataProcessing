for i in range(len(feature_names)):
    feature_importances.append([])
for i in range(train_time):
    model = DecisionTreeClassifier()
    model.fit(X_train, y_train)
    temp = model.feature_importances_
    for j in range(len(temp)):
        feature_importances[j].append(temp[j])
for i in range(len(feature_importances)):
    importances = feature_importances[i]
    if(np.median(importances) > importance_thread):
        extract_feature_names.append(feature_names[i])
return extract_feature_names